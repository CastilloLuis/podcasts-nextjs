{"version":3,"file":"static/webpack/static/development/pages/channel.js.ea14405907f308bab4b0.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import 'isomorphic-fetch';\nimport Link from 'next/link';\nimport ChannelContentList from '../components/ChannelContentList';\n\nexport default class extends React.Component {\n\n    static getInitialProps = async ({ query: { id } }) => {\n        const channelId = id;\n\n        const [responseChannel, responseAudios, responseSeries] = await Promise.all([\n            fetch(`https://api.audioboom.com/channels/${channelId}`),\n            fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`),\n            fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`)\n        ]);\n\n        const { body: { channel } } = await responseChannel.json();\n        const channelData = channel;\n\n        const { body: { audio_clips } } = await responseAudios.json();\n        const audioClips = audio_clips;\n\n        const { body: { channels } } = await responseSeries.json();\n        const series = channels;\n\n        return { channelData, audioClips, series };\n    }\n\n    render() {\n        const { channelData, audioClips, series } = this.props;\n        console.log(audioClips)\n        return (\n            <div>\n                <div className=\"channelHero\">\n                    {/* <img src={ channelData.urls.logo_image.original } alt=\"Podcast logo\"/> */}\n                    <span className=\"logoText\">{ channelData.title }</span>\n                </div>\n\n                <ChannelContentList\n                    listTitle=\"Podcasts\"\n                    items={audioClips}\n                    defaultImage={channelData.urls.logo_image.original}\n                />\n                {\n                    series.length > 0 ? \n                    <ChannelContentList\n                        listTitle=\"Series\"\n                        items={series}\n                        defaultImage={channelData.urls.logo_image.original}\n                    />  : false\n                }              \n                    \n                {/* <div className=\"channelWrapper\">\n                    <h3>Podcasts</h3>\n                    {\n                        audioClips.map((clip, index) => (\n                            <Link>\n                                <a href={`/podcast?id=${clip.id}`} className=\"list\" key={ index }>\n                                    <img className=\"list-image\" src={clip.urls.image ? clip.urls.image : channelData.urls.logo_image.original} alt=\"podcast image\" />\n                                    <div className=\"list-content\">\n                                        <span className=\"list-item-title\">{ clip.title }</span>\n                                        <span className=\"list-item-description\">{ clip.description.substr(0, 80) }...</span>\n                                    </div>\n                                </a>\n                            </Link>\n                        ))\n                    }\n\n                    { series.length > 0 ? \n                        <React.Fragment>\n                            <h3>Series</h3>\n                            {\n                                series.map((serie, index) => (\n                                    <div className=\"list\" key={ index }>\n                                        <img className=\"list-image\" src={serie.urls.logo_image.original ? serie.urls.logo_image.original : channelData.urls.logo_image.original} alt=\"podcast image\" />\n                                        <div className=\"list-content\">\n                                            <span className=\"list-item-title\">{ serie.title }</span>\n                                            <span className=\"list-item-description\">{ serie.description.substr(0, 80) }...</span>\n                                        </div>\n                                    </div>\n                                ))   \n                            }\n                        </React.Fragment> : \n                        false\n                    }\n                </div> */}\n                <style jsx>\n                {`\n\n                    .channelHero {\n                        width: 100%; \n                        height: 150px; \n                        display: flex; \n                        justify-content: center; \n                        align-items: center;\n                        background: url(${ channelData.urls.logo_image.original }) no-repeat center; \n                        background-size: cover                      \n                    }\n\n                    .logoText {\n                        font-size: 30px;\n                        color: white;\n                        font-weight: bold;\n                        text-align: center;\n                        text-shadow: 2px 2px 3px rgba(0,0,0,0.75);\n                    }\n\n                `}\n                </style>              \n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AAwBA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AA+EA;;;;AA1GA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AAAA;AAAA;AAHA;AAAA;AACA;AADA;AAAA;AASA;AACA;AAVA;AAAA;AACA;AADA;AAAA;AAYA;AACA;AAbA;AAAA;AACA;AADA;AAAA;AAeA;AACA;AAhBA;AAkBA;AAAA;AAAA;AAAA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;A","sourceRoot":""}