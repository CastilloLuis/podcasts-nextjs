{"version":3,"file":"static/webpack/static/development/pages/channel.js.c237036823fc0935e87c.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import 'isomorphic-fetch';\n\nexport default class extends React.Component {\n\n    static getInitialProps = async ({ query: { id } }) => {\n        const channelId = id;\n\n        const [responseChannel, responseAudios, responseSeries] = await Promise.all([\n            fetch(`https://api.audioboom.com/channels/${channelId}`),\n            fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`),\n            fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`)\n        ]);\n\n        const { body: { channel } } = await responseChannel.json();\n        const channelData = channel;\n\n        const { body: { audio_clips } } = await responseAudios.json();\n        const audioClips = audio_clips;\n\n        const { body: { channels } } = await responseSeries.json();\n        const series = channels;\n\n        return { channelData, audioClips, series };\n    }\n\n    render() {\n        const { channelData, audioClips, series } = this.props;\n        console.log(series)\n        return (\n            <div>\n\n                <span className=\"goBack\">ü°ê</span>\n                \n                <div style={{width: '100%', height: 150, display: 'flex', justifyContent: 'center', alignItems: 'center', background: `url(${ channelData.urls.logo_image.original }) no-repeat center`, backgroundSize: 'cover'}}>\n                    {/* <img src={ channelData.urls.logo_image.original } alt=\"Podcast logo\"/> */}\n                    <span className=\"logoText\">{ channelData.title }</span>\n                </div>\n                    \n                <div className=\"channelWrapper\">\n                    <h3>Podcasts</h3>\n                    {\n                        audioClips.map((clip, index) => (\n                            <div className=\"list\" key={index}>\n                                <span className=\"list-item-title\">{ clip.title }</span>\n                                <span className=\"list-item-description\">{ clip.description.substr(0, 100) }...</span>\n                            </div>\n                        ))\n                    }\n\n                    { series.length > 0 ? \n                        <React.Fragment>\n                            <h3>Series</h3>\n                            series.map((serie, index) => (\n                                <div className=\"list\" key={index}>\n                                    <span className=\"list-item-title\">{ serie.title }</span>\n                                    <span className=\"list-item-description\">{ serie.description.substr(0, 100) }</span>                                \n                                </div>\n                            ))                        \n                        </React.Fragment> : \n                        false\n                    }\n                </div>\n                <style jsx>\n                {`\n\n                    h1 {\n                        font-weight: bold;\n                    }\n\n                    h3 {\n                        width: 100%;\n                        text-align: left;\n                        border-bottom: 1px solid #ececec\n                    }\n\n                    .channelWrapper {\n                        display: flex;\n                        flex-direction: column;\n                        justify-content: center;\n                        align-items: center;\n                        padding: 10px\n                    }\n\n                    .logoText {\n                        font-size: 30px;\n                        color: white;\n                        font-weight: bold;\n                        text-align: center;\n                        text-shadow: 2px 2px 3px rgba(0,0,0,0.75);\n                    }\n\n                    img {\n                        border-radius: 3px;\n                        box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\n                        width: 100%\n                    }\n\n                    .list {\n                        width: 100%;\n                        text-align: left;\n                        padding: 10px;\n                        display: flex;\n                        flex-direction: column;\n                    }\n\n                    .list-item-title {\n                        font-size: 15px;\n                        font-weight: 500;\n                    }\n\n                    .list-item-description {\n                        font-size: 13px;\n                        color: #333333\n                    }\n\n                    .goBack {\n                        position: absolute;\n                        top: 10px;\n                        left: 10px;\n                        font-size: 15px;\n                    }\n                `}\n                </style>\n\n                <style jsx global>\n                    {`\n                        body {\n                            margin: 0;\n                            padding: 0;\n                            font-family: system-ui;\n                            background-color: white;\n                        }\n                    \n                    `}\n                </style>                \n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;;;;;;;;;AAwBA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4GA;;;;AAvIA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AAAA;AAAA;AAHA;AAAA;AACA;AADA;AAAA;AASA;AACA;AAVA;AAAA;AACA;AADA;AAAA;AAYA;AACA;AAbA;AAAA;AACA;AADA;AAAA;AAeA;AACA;AAhBA;AAkBA;AAAA;AAAA;AAAA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;A","sourceRoot":""}